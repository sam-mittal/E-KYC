{"version":3,"sources":["home.js","components/profileInfo.js","components/selectID.js","components/scanDocument.js","components/kyc.js","App.js","reportWebVitals.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","qr","marginTop","spacing","marginBottom","paper","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","Container","component","maxWidth","CssBaseline","className","Avatar","value","window","location","Button","type","fullWidth","Box","mt","ProfileInfo","Fragment","gutterBottom","Grid","container","item","xs","sm","TextField","required","id","name","label","autoComplete","defaultValue","InputLabelProps","shrink","formControl","minWidth","selectEmpty","SelectID","React","useState","setid","FormControl","InputLabel","Select","labelId","onChange","event","target","MenuItem","FormHelperText","button","marginLeft","ScanID","imgSrc","setImgSrc","webcamRef","useRef","capture","useCallback","imageSrc","current","getScreenshot","retake","src","onClick","audio","height","ref","screenshotFormat","videoConstraints","facingMode","appBar","position","layout","marginRight","breakpoints","up","padding","stepper","buttons","justifyContent","steps","getStepContent","step","Error","Kyc","activeStep","setActiveStep","AppBar","Toolbar","noWrap","Paper","Stepper","map","Step","StepLabel","length","App","exact","path","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8087cdb1.chunk.js","sourcesContent":["import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n// import TextField from '@material-ui/core/TextField';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\n// import Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport ContactsIcon from '@material-ui/icons/Contacts';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport QRCode from \"qrcode.react\";\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"https://github.com/sam-mittal\">\r\n        Sam Mittal E-KYC\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    qr:{\r\n        marginTop: theme.spacing(8),\r\n        marginBottom: theme.spacing(8),\r\n    },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <ContactsIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\" align=\"center\">\r\n          Scan the qr code to start KYC from your mobile (for better camera)\r\n        </Typography>\r\n        <div className={classes.qr}>\r\n        <QRCode value={window.location.href + \"/kyc\"} />\r\n        </div>\r\n        <Typography component=\"h1\" variant=\"h5\" align=\"center\">\r\n          OR\r\n        </Typography>\r\n          <a href=\"/kyc\">\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Continue on same device\r\n          </Button>\r\n          </a>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\n// import DateFnsUtils from '@date-io/date-fns';\r\n// import {\r\n//   MuiPickersUtilsProvider,\r\n//   KeyboardTimePicker,\r\n//   KeyboardDatePicker,\r\n// } from '@material-ui/pickers';\r\n\r\nexport default function ProfileInfo() {\r\n// //     const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n// //   const handleDateChange = (date) => {\r\n//     setSelectedDate(date);\r\n//   };\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Profile Information\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"firstName\"\r\n            name=\"firstName\"\r\n            label=\"First name\"\r\n            fullWidth\r\n            autoComplete=\"given-name\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"lastName\"\r\n            name=\"lastName\"\r\n            label=\"Last name\"\r\n            fullWidth\r\n            autoComplete=\"family-name\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n        <TextField\r\n            id=\"date\"\r\n            label=\"Date of Birth\"\r\n            type=\"date\"\r\n            defaultValue=\"2017-05-24\"\r\n            InputLabelProps={{\r\n            shrink: true,\r\n            }}\r\n        />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"phoneNumber\"\r\n            name=\"phoneNumber\"\r\n            label=\"Phone Number\"\r\n            fullWidth\r\n            autoComplete=\"pnonenumber\"\r\n          />\r\n        </Grid>\r\n        {/* <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"address1\"\r\n            name=\"address1\"\r\n            label=\"Address line 1\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-line1\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            id=\"address2\"\r\n            name=\"address2\"\r\n            label=\"Address line 2\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-line2\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"city\"\r\n            name=\"city\"\r\n            label=\"City\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-level2\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"zip\"\r\n            name=\"zip\"\r\n            label=\"Zip / Postal code\"\r\n            fullWidth\r\n            autoComplete=\"shipping postal-code\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"country\"\r\n            name=\"country\"\r\n            label=\"Country\"\r\n            fullWidth\r\n            autoComplete=\"shipping country\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\r\n            label=\"Use this address for payment details\"\r\n          />\r\n        </Grid> */}\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n// import Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import TextField from '@material-ui/core/TextField';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\n// import DateFnsUtils from '@date-io/date-fns';\r\n// import {\r\n//   MuiPickersUtilsProvider,\r\n//   KeyboardTimePicker,\r\n//   KeyboardDatePicker,\r\n// } from '@material-ui/pickers';\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\nexport default function SelectID() {\r\n// //     const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n// //   const handleDateChange = (date) => {\r\n//     setSelectedDate(date);\r\n//   };\r\nconst classes = useStyles();\r\n  const [id, setid] = React.useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setid(event.target.value);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Select ID to upload as proof\r\n      </Typography>\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-helper-label\">Select ID</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-helper-label\"\r\n          id=\"demo-simple-select-helper\"\r\n          value={id}\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={\"Aadhar\"}>Aadhar Card</MenuItem>\r\n          <MenuItem value={\"Pan\"}>Pan Card</MenuItem>\r\n          <MenuItem value={\"Driving\"}>Driving License</MenuItem>\r\n        </Select>\r\n        <FormHelperText>you have to uplaod this document</FormHelperText>\r\n      </FormControl>\r\n        {/* <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"address1\"\r\n            name=\"address1\"\r\n            label=\"Address line 1\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-line1\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            id=\"address2\"\r\n            name=\"address2\"\r\n            label=\"Address line 2\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-line2\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"city\"\r\n            name=\"city\"\r\n            label=\"City\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-level2\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"zip\"\r\n            name=\"zip\"\r\n            label=\"Zip / Postal code\"\r\n            fullWidth\r\n            autoComplete=\"shipping postal-code\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"country\"\r\n            name=\"country\"\r\n            label=\"Country\"\r\n            fullWidth\r\n            autoComplete=\"shipping country\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\r\n            label=\"Use this address for payment details\"\r\n          />\r\n        </Grid> */}\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n// import Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Webcam from \"react-webcam\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// import TextField from '@material-ui/core/TextField';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\n// import DateFnsUtils from '@date-io/date-fns';\r\n// import {\r\n//   MuiPickersUtilsProvider,\r\n//   KeyboardTimePicker,\r\n//   KeyboardDatePicker,\r\n// } from '@material-ui/pickers';\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(18),\r\n      },\r\n}));\r\n\r\nexport default function ScanID() {\r\n// //     const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n// //   const handleDateChange = (date) => {\r\n//     setSelectedDate(date);\r\n//   };\r\n    const videoConstraints = {\r\n        width: 1280,\r\n        height: 720,\r\n        facingMode: \"user\"\r\n    };\r\n    const [imgSrc, setImgSrc] = React.useState(null);\r\n    const webcamRef = React.useRef(null);\r\n  \r\n    const capture = React.useCallback(\r\n      () => {\r\n        const imageSrc = webcamRef.current.getScreenshot();\r\n        setImgSrc(imageSrc);\r\n      },\r\n      [webcamRef,setImgSrc]\r\n    );\r\n    const retake = React.useCallback(\r\n        () => {\r\n          setImgSrc(null);\r\n        },\r\n        [setImgSrc]\r\n      );\r\n    const classes = useStyles();\r\n//   const [id, setid] = React.useState('');\r\n\r\n//   const handleChange = (event) => {\r\n//     setid(event.target.value);\r\n//   };\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Scan and Upload your ID\r\n      </Typography>\r\n      {imgSrc && <><img src={imgSrc}/><Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={retake}\r\n        className={classes.button}\r\n        >\r\n         Retake?\r\n      </Button></> }\r\n      {!imgSrc &&\r\n      <>\r\n          <Webcam\r\n        audio={false}\r\n        height={210}\r\n        ref={webcamRef}\r\n        screenshotFormat=\"image/jpeg\"\r\n        width={420}\r\n        videoConstraints={videoConstraints}\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        onClick={capture}\r\n        className={classes.button}\r\n        >\r\n         Take Photo\r\n      </Button>\r\n      </>\r\n    }\r\n        {/* <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"address1\"\r\n            name=\"address1\"\r\n            label=\"Address line 1\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-line1\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            id=\"address2\"\r\n            name=\"address2\"\r\n            label=\"Address line 2\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-line2\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"city\"\r\n            name=\"city\"\r\n            label=\"City\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-level2\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"zip\"\r\n            name=\"zip\"\r\n            label=\"Zip / Postal code\"\r\n            fullWidth\r\n            autoComplete=\"shipping postal-code\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"country\"\r\n            name=\"country\"\r\n            label=\"Country\"\r\n            fullWidth\r\n            autoComplete=\"shipping country\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\r\n            label=\"Use this address for payment details\"\r\n          />\r\n        </Grid> */}\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ProfileInfo from './profileInfo';\r\nimport SelectID from './selectID';\r\nimport ScanID from './scanDocument';\r\n// import PaymentForm from './PaymentForm';\r\n// import Review from './Review';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '}\r\n      <Link color=\"inherit\" href=\"https://github.com/sam-mittal\">\r\n        Sam Mittal E-KYC\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst steps = ['Enter Profile Info', 'Select ID Proof', 'Scan Document'];\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <ProfileInfo />;\r\n    case 1:\r\n        return <SelectID />;\r\n    case 2:\r\n        return <ScanID />;\r\n    default:\r\n      throw new Error('Unknown step');\r\n  }\r\n}\r\n\r\nexport default function Kyc() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  \r\n  const handleNext = () => {\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            Sam Mittal E-KYC\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            KYC\r\n          </Typography>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          <React.Fragment>\r\n            {activeStep === steps.length ? (\r\n              <React.Fragment>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  Thank you for competing E-KYC process.\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  Your kyc process is complete and we have authorized your profile on our website.\r\n                </Typography>\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>\r\n                {getStepContent(activeStep)}\r\n                <div className={classes.buttons}>\r\n                  {activeStep !== 0 && (\r\n                    <Button onClick={handleBack} className={classes.button}>\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleNext}\r\n                    className={classes.button}\r\n                  >\r\n                    {activeStep === steps.length - 1 ? 'Upload & Submit' : 'Next'}\r\n                  </Button>\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n          </React.Fragment>\r\n        </Paper>\r\n        <Copyright />\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport '@material-ui/core';\nimport './App.css';\nimport Home from \"./home.js\";\nimport Kyc from \"./components/kyc\"\n\nclass App extends Component {\n  render() {\n      return (\n        <BrowserRouter>\n          <Switch>\n              <Route exact path=\"/kyc\" component={Kyc}></Route>\n              <Home></Home>\n          </Switch>\n        </BrowserRouter>\n      );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('e-kyc')\n  );\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}